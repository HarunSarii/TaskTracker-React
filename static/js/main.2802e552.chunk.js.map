{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","addTask","useState","text","setText","day","setDay","className","onSubmit","e","preventDefault","isDone","alert","htmlFor","id","name","type","placeholder","required","value","onChange","target","Button","color","toggleShow","style","backgroundColor","onClick","Header","title","showAddTask","Task","task","deleteTask","toggleDone","onDoubleClick","cursor","Tasks","tasks","map","App","setTasks","setShowAddTask","Math","floor","random","newTask","length","deletedTaskId","filter","toggleDoneId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2802e552.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n//import serialize from 'form-serialize';\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  const handleTextChange = (e) => setText(e.target.value);\r\n  const handleDayChange = (e) => setDay(e.target.value);\r\n\r\n  // const text = useRef();\r\n  // const day = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //form-serialize\r\n    // var { text, day } = serialize(e.target, { hash: true });\r\n\r\n    !text ? alert(\"Please add a task\") : addTask({ text, day, isDone: false });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n\r\n    // with useRef\r\n    // !text.current.value\r\n    //   ? alert('Please add a task')\r\n    //   : addTask({\r\n    //       text: text.current.value,\r\n    //       day: day.current.value,\r\n    //       isDone: false,\r\n    //     });\r\n\r\n    // text.current.value = '';\r\n    // day.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"task\">Task</label>\r\n        <input\r\n          id=\"task\"\r\n          name=\"text\"\r\n          type=\"text\"\r\n          placeholder=\"AddTask\"\r\n          //ref={text}\r\n          required\r\n          value={text}\r\n          onChange={handleTextChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"day\">Day & Time</label>\r\n        <input\r\n          id=\"day\"\r\n          name=\"day\"\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          //ref={day}\r\n          value={day}\r\n          onChange={handleDayChange}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ color, text, toggleShow }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={toggleShow}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n//import PropTypes from 'prop-types';\r\n\r\nconst Header = ({ title, showAddTask, toggleShow }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAddTask ? \"red\" : \"purple\"}\r\n        text={showAddTask ? \"Close Add Task Bar\" : \"Show Add Task Bar\"}\r\n        toggleShow={toggleShow}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\n// Header.defaultProps = {\r\n//   title: 'Task Tracker',\r\n// };\r\n\r\n// Header.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, deleteTask, toggleDone }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.isDone ? \"done\" : \"\"}`}\r\n      onDoubleClick={() => toggleDone(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => deleteTask(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, deleteTask, toggleDone }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          deleteTask={deleteTask}\r\n          toggleDone={toggleDone}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport Header from \"./components/Header\";\r\nimport Tasks from \"./components/Tasks\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      text: \"Study React Pre-Class Notes\",\r\n      day: \"Feb 5th at 2:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Feed the Dog\",\r\n      day: \"Feb 6th at 1:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Attend in-Class\",\r\n      day: \"Feb 7th at 20:00pm\",\r\n      isDone: false,\r\n    },\r\n  ]);\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 100) + 1;\r\n    const newTask = { id, ...task };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = (deletedTaskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== deletedTaskId));\r\n  };\r\n\r\n  // Toggle Done\r\n  const toggleDone = (toggleDoneId) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === toggleDoneId ? { ...task, isDone: !task.isDone } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  // Toggle Show\r\n  const toggleShow = () => setShowAddTask(!showAddTask);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header\r\n        title=\"Task Tracker\"\r\n        showAddTask={showAddTask}\r\n        toggleShow={toggleShow}\r\n      />\r\n      {showAddTask && <AddTask addTask={addTask} />}\r\n      {tasks.length > 0 ? (\r\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\r\n      ) : (\r\n        \"No Tasks to Show\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}